swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  - https

  
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Acocunts module
      summary: User accounts
      description: API for fetching all the accounts of a user
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/AccountsResponse'
        '400':
          description: Accounts not found
        '401':
            description: Invalid Token
        '404':
          description: Account not Found
        '500':
          description: Error on the server - Your request could not be completed 
  
  # TRANSACTIONS
  /accounts/{accountID}/transactions/currentmouth:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User transactions
      description: API for fetching the transactions of an account for a current mouth
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountID
          type: string
          description: Id of the account
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User account retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Accounts not found
        '401':
            description: Invalid Token
        '404':
          description: Account not found
        '500':
          description: Error on the server - Your request could not be completed 
  /accounts/{accountID}/transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transaction
      description: API for fetching transaction
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountID
          type: string
          description: Id of the account
          required: true
        - in: path
          name: transactionsID
          type: string
          description: Id of the transaction
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/ListOfTransactionsResponse'
        '400':
          description: Accounts not found
        '401':
            description: Invalid Token
        '404':
          description: Transactions not found
        '500':
          description: Error on the server - Your request could not be completed 
  /accounts/{accountID}/transactions/{transactionID}/detail:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetching one transaction
      description: Get one user transaction
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '404':
          description: Transaction not found
        '500':
          description: Error on the server - Your request could not be completed
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Post a specific transaction
      description: API for adding infos on a specific transaction
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountID
          type: string
          description: Id of the account
          required: true
        - in: path
          name: transactionID
          type: string
          description: Id of the transaction
          required: true
        - in: body
          name: body
          description: details to create
          schema:
            $ref: '#/definitions/TransactionDetails'
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: additionnal transaction information create successfully
          schema:
            $ref: "#/definitions/TransactionDetailsResponse"
        "400":
            description: Invalid Fields
        '401':
            description: Invalid Token
        '404':
          description: Transactions not found
        "500":
            description: Error on the server - Your request could not be completed
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Updating a transaction details
      description: API for modifying the details of an existing transaction
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountID
          type: string
          description: Id of the account
          required: true
        - in: path
          name: transactionID
          type: string
          description: Id of the transaction
          required: true
        - in: body
          name: body
          description: details to modify
          required: true
          schema:
            $ref: '#/definitions/TransactionDetails'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information updated successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid Fields
        '401':
            description: Invalid Token
        '404':
          description: Transactions not found
        '500':
          description: Error on the server - Your request could not be completed  
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete transaction details
      description: API for deleting a transaction
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountID
          type: string
          description: Id of the acocunt
          required: true
        - in: path
          name: transactionID
          type: string
          description: Id of the transaction
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information deleted successfully
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: Success
        '400':
          description: Invalid Fields
        '401':
            description: Invalid Token
        '404':
          description: Transactions not found
        '500':
          description: Error on the server - Your request could not be completed 

   
          
securityDefinitions:
   Bearer:
      type: apiKey
      name: Authorization
      in: header

  # DEFINITIONS

definitions:
   User:
      properties:
         email:
            type: string
            description: user email
         password:
            type: string
            description: user password
         firstName:
            type: string
            description: user first name
         lastName:
            type: string
            description: user last name
   Login:
      properties:
         email:
            type: string
            description: user email
         password:
            type: string
            description: user password
   ApiResponse:
      type: object
      properties:
         status:
            type: integer
         message:
            type: string
         body:
            type: object
            properties:
               id:
                  type: string
               email:
                  type: string
   LoginResponse:
      type: object
      properties:
         token:
            type: string
   UserProfile:
      type: object
      properties:
         firstName:
            type: string
         lastName:
            type: string

  # RESPONSES

   AccountsResponse:
      type: object
      properties:
         status:
            type: integer
         message:
            type: string
         body:
            type: array
            items:
               $ref: '#/definitions/Account'

   ListOfTransactionsResponse:
      type: object
      properties:
         status:
            type: integer
         message:
            type: string
         body:
            type: array
            items:
               $ref: '#/definitions/Transaction'

   TransactionResponse:
      type: object
      properties:
         status:
            type: integer
         message:
            type: string
         body:
            $ref: '#/definitions/Transaction'

   TransactionDetailsResponse:
      type: object
      properties:
         status:
            type: integer
         message:
            type: string
         body:
            $ref: '#/definitions/TransactionDetails'

   Account:
      type: object
      properties:
         id:
            type: string
         label:
            type: string
         labelAccountId:
            type: string
         amount:
            type: number
         description:
            type: string

   Transaction:
      type: object
      properties:
         id:
            type: string
         accountID:
            type: string
         date:
            type: string
         description:
            type: string
         amount:
            type: number
         balance:
            type: number
         details:
            $ref: '#/definitions/TransactionDetails'

   TransactionDetails:
      type: object
      properties:
         type:
            type: string
         category:
            type: string
         notes:
            type: string
      
        
